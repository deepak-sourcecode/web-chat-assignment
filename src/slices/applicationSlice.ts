import { createSlice, PayloadAction } from '@reduxjs/toolkit';

import type { RootState } from '../store';

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
interface IApplicationState {
  activeChatId: string;
  threshold: number;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
const initialState: IApplicationState = {
  activeChatId: '',
  threshold: 2,
};

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
export const applicationSlice = createSlice({
  name: 'application',
  initialState,
  reducers: {
    setActiveChatId: (state, action: PayloadAction<string>) => {
      state.activeChatId = action.payload;
      state.threshold = 2;
    },
    setThreshold: (state, action: PayloadAction<number>) => {
      state.threshold = action.payload;
    },
    incrementThreshold: (state) => {
      state.threshold = state.threshold + 1;
    },
  },
});

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
export const { setActiveChatId, setThreshold, incrementThreshold } = applicationSlice.actions;

export const selectActiveChatId = (state: RootState) => state.application.activeChatId;
export const selectThreshold = (state: RootState) => state.application.threshold;

export default applicationSlice.reducer;

/////////////////////////////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////////////////////////////
